name: Mac CI and RATS workflow

on:
  workflow_dispatch:
    inputs:
      force-rebuild-deps:
        description: 'Force rebuild dependencies'
        default: false
        required: false
        type: boolean
      skip-cleanup:
        description: 'Skip cleanup'
        default: false
        required: false
        type: boolean
  push:
    branches:
      - main

jobs:
  CI_and_Rats:
    env:
      CHATROOM: ${{ secrets.TRIGGER_CI_CHATROOM }}
      workspace: ${{ github.workspace }}
    runs-on: [self-hosted, macOS]
    steps:
      - name: Clone openmoonray
        uses: actions/checkout@v3
        with:
          path: source/openmoonray
          repository: dwanim/openmoonray
          token: ${{ secrets.BART_TOKEN }}
          submodules: true
      - name: Clone rats
        uses: actions/checkout@v3
        with:
          path: source/openmoonray/rats
          repository: dwanim/rats
          token: ${{ secrets.BART_TOKEN }}
          lfs: true
      - name: Check for new dependencies
        env:
            FORCE_REBUILD: ${{ inputs.force-rebuild-deps }}
        shell: bash
        run: |
          if [ ! cmp -s ${workspace}/CMakeLists.txt ${workspace}/source/openmoonray/building/macOS/CMakeLists.txt ] || [ "${FORCE_REBUILD}" == "true" ]
          then
            rm -rf ${workspace}/CMakeLists.txt ${workspace}/installs
          fi
      - name: Build dependencies
        shell: bash
        run: |
          if [ ! -d ${workspace}/installs ]
          then
            mkdir -p ${workspace}/{installs/{bin,lib,include},build-deps}
            cd ${workspace}/build-deps
            cmake ${workspace}/source/openmoonray/building/macOS
            cmake --build .
            cp -f ${workspace}/source/openmoonray/building/macOS/CMakeLists.txt ${workspace}/CMakeLists.txt
          fi
      - name: Build
        shell: bash
        working-directory: ./source/openmoonray
        run: |
          echo Current directory is $(pwd)
          rm -rf ${workspace}/build
          mkdir -p ${workspace}/{installs/openmoonray,build}
          cmake --preset dwa-macos-release
          cmake --build --preset dwa-macos-release
          chmod go+w ${workspace}/build/Testing/Temporary/LastTest.log
      - name: Run unit tests
        shell: bash
        working-directory: ./build
        run: |
          ctest -C Release -L unit -j $(sysctl -n hw.physicalcpu)
      - name: Run RATS tests
        env:
          RATS_CANONICAL_DIR: /Applications/MoonRay/rats_canonicals
        shell: bash
        working-directory: ./build
        run: |
          source ${workspace}/installs/openmoonray/Release/scripts/setup.sh
          ctest -C Release -L rats -L 'render|diff' --output-on-failure  -j $(sysctl -n hw.physicalcpu)
      - name: Cleanup
        env:
            SKIP_CLEANUP: ${{ inputs.skip-cleanup }}
        if: always()
        shell: bash
        run: |
          if [ "$SKIP_CLEANUP" == "false" ]
          then
            echo Removing build products
            cd ${workspace}
            rm -rf source build-deps installs/openmoonray
          fi
